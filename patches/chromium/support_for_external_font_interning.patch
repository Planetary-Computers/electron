From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Izzy Swart <zenerboson@gmail.com>
Date: Fri, 28 Jun 2024 17:13:48 -0400
Subject: Support for external font interning


diff --git a/third_party/blink/public/devtools_protocol/browser_protocol.pdl b/third_party/blink/public/devtools_protocol/browser_protocol.pdl
index 99d56ff068a67eb6cb4fd35727dfbd4c99261354..dce259404d2d43c9bcb2763420dcfdf60df13127 100644
--- a/third_party/blink/public/devtools_protocol/browser_protocol.pdl
+++ b/third_party/blink/public/devtools_protocol/browser_protocol.pdl
@@ -5073,8 +5073,8 @@ experimental domain LayerTree
     parameters
       # The id of the layer snapshot.
       SnapshotId snapshotId
-      # Whether to skip serializing typefaces
-      optional boolean skipTypefaces
+      # Include only typefaces with these ids
+      optional array of integer typefaceFilter
       # Whether to skip serializing images
       optional boolean skipImages
     returns
diff --git a/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.cc b/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.cc
index d1f49ea43746c2fe7411fd45838c8e529b902ada..476d2307d2dddbf4fb202645d3804d224e291952 100644
--- a/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.cc
+++ b/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.cc
@@ -439,17 +439,30 @@ protocol::Response InspectorLayerTreeAgent::loadSnapshot(
   return protocol::Response::Success();
 }
 
+protocol::Response InspectorLayerTreeAgent::dumpTypeface(int typeface_id,
+                                                         protocol::Binary* typeface) {
+  return protocol::Response::Success();
+}
+
 protocol::Response InspectorLayerTreeAgent::dumpSnapshot(
     const String& snapshot_id,
-    Maybe<bool> skip_typefaces,
+    Maybe<protocol::Array<int>> typeface_filter,
     Maybe<bool> skip_images,
     protocol::Binary* picture) {
   const PictureSnapshot* snapshot = nullptr;
   protocol::Response response = GetSnapshotById(snapshot_id, snapshot);
   if (!response.IsSuccess())
     return response;
-  Vector<uint8_t> data = snapshot->Dump(skip_typefaces.value_or(false),
-                                       skip_images.value_or(false));
+
+  Vector<uint32_t> typeface_filter_ids;
+  if (typeface_filter.has_value()) {
+    for (int id : *typeface_filter)
+      typeface_filter_ids.push_back(static_cast<uint32_t>(id));
+  }
+  
+  Vector<uint8_t> data = snapshot->Dump(typeface_filter.has_value(),
+                                        typeface_filter_ids,
+                                        skip_images.value_or(false));
   *picture = protocol::Binary::fromVector(data);
   return protocol::Response::Success();
 }
diff --git a/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.h b/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.h
index 478892e0bc22ffa13361361c7ac317d91ee7b62b..882af768f85ba9404563c85632a1a1ef1407955a 100644
--- a/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.h
+++ b/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.h
@@ -80,10 +80,13 @@ class CORE_EXPORT InspectorLayerTreeAgent final
   protocol::Response loadSnapshot(
       std::unique_ptr<protocol::Array<protocol::LayerTree::PictureTile>> tiles,
       String* snapshot_id) override;
+  protocol::Response dumpTypeface(int typeface_id,
+                                  protocol::Binary* typeface) override;
   protocol::Response dumpSnapshot(const String& snapshot_id,
-      protocol::Maybe<bool> skip_typefaces,
-      protocol::Maybe<bool> skip_images,
-      protocol::Binary* picture) override;
+                                  protocol::Maybe<protocol::Array<int>>
+                                      typeface_filter,
+                                  protocol::Maybe<bool> skip_images,
+                                  protocol::Binary* picture) override;
   protocol::Response releaseSnapshot(const String& snapshot_id) override;
   protocol::Response profileSnapshot(
       const String& snapshot_id,
diff --git a/third_party/blink/renderer/platform/graphics/picture_snapshot.cc b/third_party/blink/renderer/platform/graphics/picture_snapshot.cc
index 403372c14d3c603d3990ac72eaa4923443a6ec30..53b3a77216c0b9d97462fde951bc5c3c91593419 100644
--- a/third_party/blink/renderer/platform/graphics/picture_snapshot.cc
+++ b/third_party/blink/renderer/platform/graphics/picture_snapshot.cc
@@ -31,6 +31,8 @@
 #include "third_party/blink/renderer/platform/graphics/picture_snapshot.h"
 
 #include <memory>
+#include "base/containers/flat_map.h"
+#include "base/containers/flat_set.h"
 #include "base/time/time.h"
 #include "third_party/blink/renderer/platform/graphics/logging_canvas.h"
 #include "third_party/blink/renderer/platform/graphics/profiling_canvas.h"
@@ -40,15 +42,18 @@
 #include "third_party/blink/renderer/platform/image-decoders/segment_reader.h"
 #include "third_party/blink/renderer/platform/image-encoders/image_encoder.h"
 #include "third_party/blink/renderer/platform/wtf/text/text_encoding.h"
+#include "third_party/skia/include/core/SkData.h"
 #include "third_party/skia/include/core/SkImage.h"
 #include "third_party/skia/include/core/SkPictureRecorder.h"
 #include "third_party/skia/include/core/SkSerialProcs.h"
-#include "third_party/skia/include/core/SkData.h"
+#include "third_party/skia/include/core/SkString.h"
 #include "third_party/skia/include/core/SkTypeface.h"
 #include "ui/gfx/geometry/rect_f.h"
 #include "ui/gfx/geometry/size.h"
 #include "ui/gfx/geometry/skia_conversions.h"
 
+using TypefaceSerializationContext = base::flat_set<uint32_t>;
+
 namespace blink {
 
 PictureSnapshot::PictureSnapshot(sk_sp<const SkPicture> picture)
@@ -168,26 +173,40 @@ std::unique_ptr<JSONArray> PictureSnapshot::SnapshotCommandLog() const {
   return canvas.Log();
 }
 
-sk_sp<SkData> nullTypefaceProc(SkTypeface* typeface, void* context) {
-  return typeface->serialize(SkTypeface::SerializeBehavior::kDontIncludeData);
-}
-
-sk_sp<SkData> nullImageProc(SkImage* typeface, void* context) {
-  return SkData::MakeEmpty();
-}
-
-Vector<uint8_t> PictureSnapshot::Dump(bool skip_typefaces, bool skip_images) const {
+Vector<uint8_t> PictureSnapshot::Dump(bool filter_typefaces,
+                                      Vector<uint32_t> typeface_filter,
+                                      bool skip_images) const {
+  TypefaceSerializationContext typeface_filter_set(typeface_filter.begin(),
+                                                   typeface_filter.end());
   SkSerialProcs sProcs;
-  if (skip_typefaces) {
-    sProcs.fTypefaceProc = nullTypefaceProc;
+  if (filter_typefaces) {
+    sProcs.fTypefaceCtx = &typeface_filter_set;
+    sProcs.fTypefaceProc = [](SkTypeface* typeface, void* context) {
+      auto* typeface_filter_set =
+          reinterpret_cast<TypefaceSerializationContext*>(context);
+      SkDynamicMemoryWStream stream;
+      uint32_t id = typeface->uniqueID();
+      stream.write32(id);
+      if (typeface_filter_set->find(id) !=
+          typeface_filter_set->end()) {
+        stream.writeBool(true);
+        typeface->serialize(&stream, SkTypeface::SerializeBehavior::kDoIncludeData);
+        typeface_filter_set->erase(id);
+      } else {
+        stream.writeBool(false);
+      }
+      return stream.detachAsData();
+    };
   }
   if (skip_images) {
-    sProcs.fImageProc = nullImageProc;
+    sProcs.fImageProc = [](SkImage* image, void* context) {
+      return SkData::MakeEmpty();
+    };
   }
-  sk_sp<SkData> skData = picture_->serialize(&sProcs);
+  sk_sp<SkData> data = picture_->serialize(&sProcs);
   Vector<uint8_t> result;
-  result.Grow(static_cast<wtf_size_t>(skData->size()));
-  memcpy(result.data(), skData->bytes(), skData->size());
+  result.Grow(static_cast<wtf_size_t>(data->size()));
+  memcpy(result.data(), data->bytes(), data->size());
   return result;
 }
 
diff --git a/third_party/blink/renderer/platform/graphics/picture_snapshot.h b/third_party/blink/renderer/platform/graphics/picture_snapshot.h
index 39d6824d13252096aa14b5401b4c4cab8cbd8b7e..51ebdcc4d8729b69f1c4c33df3667987280bb27b 100644
--- a/third_party/blink/renderer/platform/graphics/picture_snapshot.h
+++ b/third_party/blink/renderer/platform/graphics/picture_snapshot.h
@@ -72,7 +72,9 @@ class PLATFORM_EXPORT PictureSnapshot : public RefCounted<PictureSnapshot> {
                                           base::TimeDelta min_duration,
                                           const gfx::RectF* clip_rect) const;
   std::unique_ptr<JSONArray> SnapshotCommandLog() const;
-  Vector<uint8_t> Dump(bool skip_typefaces, bool skip_images) const;
+  Vector<uint8_t> Dump(bool filter_typefaces,
+                       Vector<uint32_t> typeface_filter,
+                       bool skip_images) const;
   bool IsEmpty() const;
 
  private:
