From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Izzy Swart <zenerboson@gmail.com>
Date: Thu, 27 Jun 2024 10:33:38 -0400
Subject: Add LayerTree.dumpSnapshot to CDP


diff --git a/third_party/blink/public/devtools_protocol/browser_protocol.pdl b/third_party/blink/public/devtools_protocol/browser_protocol.pdl
index 5c830ad4623ccb59d71d3f842e45927140597a95..99d56ff068a67eb6cb4fd35727dfbd4c99261354 100644
--- a/third_party/blink/public/devtools_protocol/browser_protocol.pdl
+++ b/third_party/blink/public/devtools_protocol/browser_protocol.pdl
@@ -5067,6 +5067,19 @@ experimental domain LayerTree
     returns
       # The id of the layer snapshot.
       SnapshotId snapshotId
+    
+  # Dumps a snapshot of the layer tree
+  command dumpSnapshot
+    parameters
+      # The id of the layer snapshot.
+      SnapshotId snapshotId
+      # Whether to skip serializing typefaces
+      optional boolean skipTypefaces
+      # Whether to skip serializing images
+      optional boolean skipImages
+    returns
+      # A serialized SkPicture object.
+      binary picture
 
   command profileSnapshot
     parameters
diff --git a/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.cc b/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.cc
index dec856486bff360098286c45a799560b5872ae70..d1f49ea43746c2fe7411fd45838c8e529b902ada 100644
--- a/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.cc
+++ b/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.cc
@@ -439,6 +439,21 @@ protocol::Response InspectorLayerTreeAgent::loadSnapshot(
   return protocol::Response::Success();
 }
 
+protocol::Response InspectorLayerTreeAgent::dumpSnapshot(
+    const String& snapshot_id,
+    Maybe<bool> skip_typefaces,
+    Maybe<bool> skip_images,
+    protocol::Binary* picture) {
+  const PictureSnapshot* snapshot = nullptr;
+  protocol::Response response = GetSnapshotById(snapshot_id, snapshot);
+  if (!response.IsSuccess())
+    return response;
+  Vector<uint8_t> data = snapshot->Dump(skip_typefaces.value_or(false),
+                                       skip_images.value_or(false));
+  *picture = protocol::Binary::fromVector(data);
+  return protocol::Response::Success();
+}
+
 protocol::Response InspectorLayerTreeAgent::releaseSnapshot(
     const String& snapshot_id) {
   SnapshotById::iterator it = snapshot_by_id_.find(snapshot_id);
diff --git a/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.h b/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.h
index f9f9633179ae10952263807d886db5ab11816312..478892e0bc22ffa13361361c7ac317d91ee7b62b 100644
--- a/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.h
+++ b/third_party/blink/renderer/core/inspector/inspector_layer_tree_agent.h
@@ -80,6 +80,10 @@ class CORE_EXPORT InspectorLayerTreeAgent final
   protocol::Response loadSnapshot(
       std::unique_ptr<protocol::Array<protocol::LayerTree::PictureTile>> tiles,
       String* snapshot_id) override;
+  protocol::Response dumpSnapshot(const String& snapshot_id,
+      protocol::Maybe<bool> skip_typefaces,
+      protocol::Maybe<bool> skip_images,
+      protocol::Binary* picture) override;
   protocol::Response releaseSnapshot(const String& snapshot_id) override;
   protocol::Response profileSnapshot(
       const String& snapshot_id,
diff --git a/third_party/blink/renderer/platform/graphics/picture_snapshot.cc b/third_party/blink/renderer/platform/graphics/picture_snapshot.cc
index 18ca84dd1d952a4614de9ef4607fb44ead96b127..403372c14d3c603d3990ac72eaa4923443a6ec30 100644
--- a/third_party/blink/renderer/platform/graphics/picture_snapshot.cc
+++ b/third_party/blink/renderer/platform/graphics/picture_snapshot.cc
@@ -42,6 +42,9 @@
 #include "third_party/blink/renderer/platform/wtf/text/text_encoding.h"
 #include "third_party/skia/include/core/SkImage.h"
 #include "third_party/skia/include/core/SkPictureRecorder.h"
+#include "third_party/skia/include/core/SkSerialProcs.h"
+#include "third_party/skia/include/core/SkData.h"
+#include "third_party/skia/include/core/SkTypeface.h"
 #include "ui/gfx/geometry/rect_f.h"
 #include "ui/gfx/geometry/size.h"
 #include "ui/gfx/geometry/skia_conversions.h"
@@ -165,4 +168,27 @@ std::unique_ptr<JSONArray> PictureSnapshot::SnapshotCommandLog() const {
   return canvas.Log();
 }
 
+sk_sp<SkData> nullTypefaceProc(SkTypeface* typeface, void* context) {
+  return typeface->serialize(SkTypeface::SerializeBehavior::kDontIncludeData);
+}
+
+sk_sp<SkData> nullImageProc(SkImage* typeface, void* context) {
+  return SkData::MakeEmpty();
+}
+
+Vector<uint8_t> PictureSnapshot::Dump(bool skip_typefaces, bool skip_images) const {
+  SkSerialProcs sProcs;
+  if (skip_typefaces) {
+    sProcs.fTypefaceProc = nullTypefaceProc;
+  }
+  if (skip_images) {
+    sProcs.fImageProc = nullImageProc;
+  }
+  sk_sp<SkData> skData = picture_->serialize(&sProcs);
+  Vector<uint8_t> result;
+  result.Grow(static_cast<wtf_size_t>(skData->size()));
+  memcpy(result.data(), skData->bytes(), skData->size());
+  return result;
+}
+
 }  // namespace blink
diff --git a/third_party/blink/renderer/platform/graphics/picture_snapshot.h b/third_party/blink/renderer/platform/graphics/picture_snapshot.h
index 7a66ef185fb95780f942518e7a866fb8cda15e12..39d6824d13252096aa14b5401b4c4cab8cbd8b7e 100644
--- a/third_party/blink/renderer/platform/graphics/picture_snapshot.h
+++ b/third_party/blink/renderer/platform/graphics/picture_snapshot.h
@@ -72,6 +72,7 @@ class PLATFORM_EXPORT PictureSnapshot : public RefCounted<PictureSnapshot> {
                                           base::TimeDelta min_duration,
                                           const gfx::RectF* clip_rect) const;
   std::unique_ptr<JSONArray> SnapshotCommandLog() const;
+  Vector<uint8_t> Dump(bool skip_typefaces, bool skip_images) const;
   bool IsEmpty() const;
 
  private:
